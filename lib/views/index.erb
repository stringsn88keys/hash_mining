<script src="http://crypto-js.googlecode.com/svn/tags/3.1.2/build/components/core-min.js"></script>
<script src="http://crypto-js.googlecode.com/svn/tags/3.1.2/build/components/enc-utf16-min.js"></script>
<script src="http://crypto-js.googlecode.com/svn/tags/3.1.2/build/components/enc-base64-min.js"></script>

<script src="http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/sha3.js"></script>

<script>
var n = <%= start %>,
    max = <%= start + 999999 %>;
    batch = 10000;

var start = new Date();

function logText(el, text) {
  var p = document.createElement('p');
  p.innerHTML = text;
  while (p.children.length > 0) {
    el.appendChild(p.children[0]);
  }
  document.body.appendChild(p);

  var xmlhttp = new XMLHttpRequest
  xmlhttp.open("POST","/",true);
  xmlhttp.setRequestHeader("Content-type","application/x-www-form-urlencoded");
  xmlhttp.send("data=" + text);
}
function logTime() {
  var current = new Date();
  logText(document.body, current);
}

function logHashesPerSecond(n) {
  var current = new Date();
  var hps = n / ((current.getTime() - start.getTime()) / 1000.0);
  logText(document.body, "hashes per second: " + hps);
}

(function nextBatch() {
    if(n == 0) {
      logTime();
    }
    for (var i = 0; i < batch && n < max; ++i, ++n) {
      var hash = CryptoJS.SHA3("Message" + n, { outputLength: 512 });
      stringy=CryptoJS.enc.Base64.stringify(hash);
      if(stringy.substring(0, 4) == 'FART') {
//      if(stringy[0] == '0' && stringy[1] == '0' && stringy[2] == '0') {
        logHashesPerSecond(n);
        logText(document.body, stringy + " at :" +n);
      }
    }
    if (n < max) {
        setTimeout(nextBatch, 0);
    } else {
        logText(document.body, 'FINISHED');
        logTime();
        var finish = new Date();
        logText(document.body, finish);
        window.location = '/'
    }
})();
</script>
